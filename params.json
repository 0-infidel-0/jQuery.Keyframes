{"name":"Jquery.keyframes","tagline":"jQuery.Keyframes generates and runs CSS3 keyframes quickly and easily allowing you to concentrate on the content of your project whilst cutting down code.","body":"jQuery.Keyframes\r\n===========\r\njQuery.Keyframes generates and plays CSS3 keyframes quickly and easily allowing you to concentrate on the content of your project whilst cutting down code.\r\n\r\nOverview\r\n--------\r\nWith the rise of CSS3 and HTML5, we see more and more usage of fancy features like transformations, translations, rotations and scaling.\r\njQuery has a very nice built in *$(selector).animate()* function which allows for easy setup of these animations.\r\nHowever, jQuery's animate() does not support multiple keyframes. jQuery.Keyframes helps you accomplish just that.\r\n\r\nRequirements\r\n------------\r\nIn order for jQuery.Keyframes to work the jQuery library needs to be linked either through CDN:\r\n\r\n```html\r\n<script src='http://code.jquery.com/jquery-<version>[.min].js'></script>\r\n```\r\n\r\nor local copy:\r\n\r\n```html\r\n<script src='/path/to/jquery-<version>[.min].js'></script>\r\n```\r\n\r\nInstallation\r\n------------\r\nInclude script in the *head* of your document using the following line:\r\n\r\n```html\r\n<script src='/path/to/jquery.keyframes[.min].js'></script>\r\n```\r\n\r\nUsage\r\n-------------\r\n\r\n**Get browser style prefix**\r\n\r\n```javascript\r\nvar vendorPrefix = $.keyframe.getVendorPrefix();\r\n```\r\n\r\n**Detecting CSS animation support**\r\n\r\n```javascript\r\nvar supportedFlag = $.keyframe.isSupported();\r\n```\r\n\r\n**Adding a new animation sequence (keyframe)**\r\n\r\n```javascript\r\n$.keyframe.define([{\r\n    name: 'trapdoor-sequence',\r\n    '0%': {'height': '70px'},\r\n    '30%': {'height': '10px'},\r\n    '60%': {'height': '30px'},\r\n    '100%': {'height': '10px'}\r\n}]);\r\n```\r\n\r\n**Adding a single frame style**\r\n\r\n```javascript\r\n$.keyframe.define({\r\n    name: 'ball-roll',\r\n    from: {\r\n        transform: 'rotate(0deg)'\r\n    },\r\n    to: {\r\n        transform: 'rotate(360deg)'\r\n    }\r\n});\r\n```\r\n\r\n**Adding multiple frame styles**\r\n\r\n```javascript\r\nvar pfx = $.keyframe.getVendorPrefix();\r\n\t\t\r\n//Note the variable notation to be able to add vendor specific prefix\r\nvar transform = pfx + 'transform'; \r\n\r\n$.keyframe.define([{\r\n\tname: 'roll-clockwise',\r\n\t'0%': {\r\n\t    'margin-left' : '0px',\r\n\t    'background-color' : 'red',\r\n\t    transform : 'rotate(0deg)'\r\n\t},\r\n\t'100%': {\r\n\t    'margin-left' : '600px',\r\n\t    transform : 'rotate(360deg)'\r\n\t}\r\n    },{\r\n\tname: 'roll-anti-clockwise',\r\n\t'0%': {\r\n\t    'margin-left' : '0px',\r\n\t    'background-color' : 'red',\r\n\t    transform : 'rotate(0deg)'\r\n\t},\r\n\t'100%': {\r\n\t    'margin-left' : '600px',\r\n\t    transform : 'rotate(-360deg)'\r\n\t}\r\n    }\r\n]);\r\n```\r\n\r\n**Adding styles and properties in array fashion**\r\n\r\n*Gives resemblance to CSS styling definitions*\r\n\r\n```javascript\r\nvar pfx = $.keyframe.getVendorPrefix();\r\n\r\n//Note the variable notation to be able to add vendor specific prefix\r\nvar transform = pfx + 'transform'; \r\n\r\nvar shake_start = {transform: 'translate(0px)'};\r\nvar shake_odd1 = {transform: 'translate(-10px, -10px)'};\r\nvar shake_even1 = {transform: 'translate(10px, 10px)'};\r\nvar shake_odd2 = {transform: 'translate(10px, -10px)'};\r\nvar shake_even2 = {transform: 'translate(-10px, 10px)'};\r\n\r\n$.keyframe.define([{\r\n\tname: 'crazy',\r\n\t'0%': shake_start,\r\n\t'10%': shake_odd2,\r\n\t'20%': shake_even1,\r\n\t'30%': shake_odd2,\r\n\t'40%': shake_even2,\r\n\t'50%': shake_odd2,\r\n\t'60%': shake_even1,\r\n\t'70%': shake_odd1,\r\n\t'80%': shake_even2,\r\n\t'90%': shake_odd1\r\n    }\r\n]);\r\n```\r\n\r\n*Please note, you can add as many properties to the array as you want to*\r\n\r\n**Playing an animation**\r\n\r\n```javascript\r\n$(selector).playKeyframe({\r\n    name: 'trapdoor-sequence', // name of the keyframe you want to bind to the selected element\r\n    duration: 1000, // [optional, default: 0, in ms] how long you want it to last in milliseconds\r\n    timingFunction: 'linear', // [optional, default: ease] specifies the speed curve of the animation\r\n    delay: 0, //[optional, default: 0, in ms]  how long you want to wait before the animation starts in milliseconds, default value is 0\r\n    repeat: 'infinite', //[optional, default:1]  how many times you want the animation to repeat, default value is 1\r\n    direction: 'normal', //[optional, default: 'normal']  which direction you want the frames to flow, default value is normal\r\n    fillMode: 'forwards', //[optional, default: 'forward']  how to apply the styles outside the animation time, default value is forwards\r\n    complete: function(){} //[optional]  Function fired after the animation is complete. If repeat is infinite, the function will be fired every time the animation is restarted.\r\n});\r\n```\r\n\r\n**Playing an animation (shorthand)**\r\n\r\n```javascript\r\n$(selector).playKeyframe(\r\n    'trapdoor-sequence 1000 linear 0 infinite normal forwards',\r\n    complete\r\n);\r\n```\t\r\n\r\n**Reset the animation**\r\n\r\n```javascript\r\n$(selector).resetKeyframe(callback);\r\n```\r\n\r\n**Freeze keyframe animation and kill callbacks**\r\n\r\n```javascript\r\n$(selector).pauseKeyframe();\r\n```\r\n\r\n**Resume keyframe animation**\r\n\r\n```javascript\r\n$(selector).resumeKeyframe();\r\n```\r\n","google":"UA-47285338-1","note":"Don't delete this file! It's used internally to help with page regeneration."}