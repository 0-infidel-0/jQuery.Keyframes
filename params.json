{"name":"Jquery.keyframes","tagline":"jQuery.Keyframes generates and runs CSS3 keyframes quickly and easily allowing you to concentrate on the content of your project whilst cutting down code.","body":"jQuery.Keyframes\r\n===========\r\n\r\njQuery.Keyframes generates and plays CSS3 keyframes quickly and easily allowing you to concentrate on the content of your project whilst cutting down code.\r\n\r\njQuery.Keyframes introduces\r\n+ some changes in the API \r\n+ $.keyframe.isSupported() to detect CSS animation support\r\n+ 10% smaller minified version (2.256 kb vs 2.453 kb)\r\n+ support for keyframe redefinition: if you redifine an existing keyframe, running animation will reflect those changes\r\n\r\nExample Usage\r\n-------------\r\n```javascript\r\n\r\n// Get browser style prefix\r\n$.keyframe.browserCode();\r\n\r\n// Detecting CSS animation support\r\n$.keyframe.isSupported();\r\n\r\n// Adding a new animation sequence (keyframe)\r\n$.fn.addKeyframe([{\r\n\tname: \"trapdoor-sequence\",\r\n\t\"0%\": \"height:70px\",\r\n\t\"30%\": \"height:10px\",\r\n\t\"60%\": \"height:30px\",\r\n\t\"100%\": \"height:10px\"\r\n}]);\r\n\r\n// Adding a single frame style\r\n$.keyframe.define({\r\n\tname: \"ball-roll\",\r\n\tfrom: $.keyframe.browserCode()+\"transform:rotate(0deg)\",\r\n\tto: $.keyframe.browserCode()+\"transform:rotate(360deg)\",\r\n});\r\n\r\n// Adding multiple frame styles\r\n$.keyframe.define([{\r\n\tname: \"ball-roll\",\r\n\tfrom: $.keyframe.browserCode()+\"transform:rotate(0deg)\",\r\n\tto: $.keyframe.browserCode()+\"transform:rotate(360deg)\",\r\n\t},\r\n\t{\r\n\tname: \"half-rotation\",\r\n\tfrom: $.keyframe.browserCode()+\"transform:rotate(0deg)\",\r\n\tto: $.keyframe.browserCode()+\"transform:rotate(180deg)\",\r\n\t}\r\n]);\r\n\r\n\r\n// Playing an animation\r\n$(selector).playKeyframe({\r\n\t\tname: 'trapdoor-sequence', // name of the keyframe you want to bind to the selected element\r\n\t\tduration: 1000, // [optional, default: 0, in ms] how long you want it to last in milliseconds\r\n\t\ttimingFunction: 'linear', // [optional, default: ease] specifies the speed curve of the animation\r\n\t\tdelay: 0, //[optional, default: 0, in ms]  how long you want to wait before the animation starts in milliseconds, default value is 0\r\n\t\trepeat: 'infinite', //[optional, default:1]  how many times you want the animation to repeat, default value is 1\r\n\t\tdirection: 'normal', //[optional, default: 'normal']  which direction you want the frames to flow, default value is normal\r\n\t\tfillMode: 'forwards' //[optional, default: 'forward']  how to apply the styles outside the animation time, default value is forwards\r\n\t\tcomplete: function(){} //[optional]  Function fired after the animation is complete. If repeat is infinite, the function will be fired every time the animation is restarted.\r\n\t},\r\n);\r\n\t\r\n// Reset the animation\r\n$(selector).resetKeyframe(callback);\r\n\r\n// Freeze keyframe animation and kill callbacks\r\n$(selector).pauseKeyframe();\r\n\r\n// Resume keyframe animation\r\n$(selector).resumeKeyframe();\r\n\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}